{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "presentbet",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "finl",
          "type": "uint8"
        }
      ],
      "name": "gameresult",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "presentbet",
          "type": "uint8"
        }
      ],
      "name": "newbetisset",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "getNewbet",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isbetset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "roll",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Dicegame.sol"
  },
  "ast": {
    "absolutePath": "contracts/Dicegame.sol",
    "exportedSymbols": {
      "Dicegame": [
        266
      ]
    },
    "id": 267,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 266,
        "linearizedBaseContracts": [
          266
        ],
        "name": "Dicegame",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Dicegame.Createbet",
            "id": 8,
            "members": [
              {
                "constant": false,
                "id": 3,
                "mutability": "mutable",
                "name": "presentbet",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "107:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 2,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "107:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "isbetset",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "163:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 4,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "163:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "finl",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "220:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 6,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "220:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Createbet",
            "nodeType": "StructDefinition",
            "scope": 266,
            "src": "80:249:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "mutability": "mutable",
            "name": "bets",
            "nodeType": "VariableDeclaration",
            "scope": 266,
            "src": "335:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Createbet_$8_storage_$",
              "typeString": "mapping(address => struct Dicegame.Createbet)"
            },
            "typeName": {
              "id": 12,
              "keyType": {
                "id": 9,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "343:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "335:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Createbet_$8_storage_$",
                "typeString": "mapping(address => struct Dicegame.Createbet)"
              },
              "valueType": {
                "id": 11,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 10,
                  "name": "Createbet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8,
                  "src": "354:9:0"
                },
                "referencedDeclaration": 8,
                "src": "354:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Createbet_$8_storage_ptr",
                  "typeString": "struct Dicegame.Createbet"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 15,
            "mutability": "mutable",
            "name": "randomfactor",
            "nodeType": "VariableDeclaration",
            "scope": 266,
            "src": "384:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 14,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "384:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 21,
            "name": "newbetisset",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "bidder",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "466:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "466:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "presentbet",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "482:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "465:34:0"
            },
            "src": "448:52:0"
          },
          {
            "anonymous": false,
            "id": 29,
            "name": "gameresult",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "bidder",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "523:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "presentbet",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "539:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "539:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "finl",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "557:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "522:46:0"
            },
            "src": "506:63:0"
          },
          {
            "body": {
              "id": 36,
              "nodeType": "Block",
              "src": "589:34:0",
              "statements": [
                {
                  "expression": {
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32,
                      "name": "randomfactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "599:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130",
                      "id": 33,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "614:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "599:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 35,
                  "nodeType": "ExpressionStatement",
                  "src": "599:17:0"
                }
              ]
            },
            "id": 37,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "586:2:0"
            },
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "589:0:0"
            },
            "scope": 266,
            "src": "575:48:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "676:49:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 42,
                        "name": "bets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "693:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Createbet_$8_storage_$",
                          "typeString": "mapping(address => struct Dicegame.Createbet storage ref)"
                        }
                      },
                      "id": 45,
                      "indexExpression": {
                        "expression": {
                          "id": 43,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "698:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "698:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "693:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Createbet_$8_storage",
                        "typeString": "struct Dicegame.Createbet storage ref"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "isbetset",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 5,
                    "src": "693:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 41,
                  "id": 47,
                  "nodeType": "Return",
                  "src": "686:32:0"
                }
              ]
            },
            "functionSelector": "04412120",
            "id": 49,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isbetset",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "646:2:0"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "670:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "670:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "669:6:0"
            },
            "scope": 266,
            "src": "629:96:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 105,
              "nodeType": "Block",
              "src": "799:314:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 55,
                              "name": "bets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "817:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Createbet_$8_storage_$",
                                "typeString": "mapping(address => struct Dicegame.Createbet storage ref)"
                              }
                            },
                            "id": 58,
                            "indexExpression": {
                              "expression": {
                                "id": 56,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "822:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 57,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "822:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "817:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Createbet_$8_storage",
                              "typeString": "struct Dicegame.Createbet storage ref"
                            }
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isbetset",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5,
                          "src": "817:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "846:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "817:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 54,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "809:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "809:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "809:43:0"
                },
                {
                  "expression": {
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 64,
                          "name": "bets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "862:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Createbet_$8_storage_$",
                            "typeString": "mapping(address => struct Dicegame.Createbet storage ref)"
                          }
                        },
                        "id": 67,
                        "indexExpression": {
                          "expression": {
                            "id": 65,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "867:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "867:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "862:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Createbet_$8_storage",
                          "typeString": "struct Dicegame.Createbet storage ref"
                        }
                      },
                      "id": 68,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isbetset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "862:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 69,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "890:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "862:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "862:32:0"
                },
                {
                  "expression": {
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 72,
                          "name": "bets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "904:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Createbet_$8_storage_$",
                            "typeString": "mapping(address => struct Dicegame.Createbet storage ref)"
                          }
                        },
                        "id": 75,
                        "indexExpression": {
                          "expression": {
                            "id": 73,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "909:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "909:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "904:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Createbet_$8_storage",
                          "typeString": "struct Dicegame.Createbet storage ref"
                        }
                      },
                      "id": 76,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "presentbet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "904:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 77,
                        "name": "random",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "934:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                          "typeString": "function () view returns (uint8)"
                        }
                      },
                      "id": 78,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "934:8:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "904:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "904:38:0"
                },
                {
                  "expression": {
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 81,
                      "name": "randomfactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "952:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 82,
                          "name": "bets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "968:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Createbet_$8_storage_$",
                            "typeString": "mapping(address => struct Dicegame.Createbet storage ref)"
                          }
                        },
                        "id": 85,
                        "indexExpression": {
                          "expression": {
                            "id": 83,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "973:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "973:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "968:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Createbet_$8_storage",
                          "typeString": "struct Dicegame.Createbet storage ref"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "presentbet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "968:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "952:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "952:43:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 90,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1022:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1022:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 92,
                            "name": "bets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "1034:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Createbet_$8_storage_$",
                              "typeString": "mapping(address => struct Dicegame.Createbet storage ref)"
                            }
                          },
                          "id": 95,
                          "indexExpression": {
                            "expression": {
                              "id": 93,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1039:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 94,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1039:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1034:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Createbet_$8_storage",
                            "typeString": "struct Dicegame.Createbet storage ref"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "presentbet",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3,
                        "src": "1034:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 89,
                      "name": "newbetisset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "1010:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$returns$__$",
                        "typeString": "function (address,uint8)"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1010:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "EmitStatement",
                  "src": "1005:57:0"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 99,
                        "name": "bets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "1079:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Createbet_$8_storage_$",
                          "typeString": "mapping(address => struct Dicegame.Createbet storage ref)"
                        }
                      },
                      "id": 102,
                      "indexExpression": {
                        "expression": {
                          "id": 100,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1084:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1084:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1079:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Createbet_$8_storage",
                        "typeString": "struct Dicegame.Createbet storage ref"
                      }
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "presentbet",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3,
                    "src": "1079:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 53,
                  "id": 104,
                  "nodeType": "Return",
                  "src": "1072:34:0"
                }
              ]
            },
            "functionSelector": "e9b903f4",
            "id": 106,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNewbet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "773:2:0"
            },
            "returnParameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "792:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "792:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "791:7:0"
            },
            "scope": 266,
            "src": "755:358:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 217,
              "nodeType": "Block",
              "src": "1258:737:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 116,
                              "name": "bets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "1276:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Createbet_$8_storage_$",
                                "typeString": "mapping(address => struct Dicegame.Createbet storage ref)"
                              }
                            },
                            "id": 119,
                            "indexExpression": {
                              "expression": {
                                "id": 117,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1281:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 118,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1281:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1276:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Createbet_$8_storage",
                              "typeString": "struct Dicegame.Createbet storage ref"
                            }
                          },
                          "id": 120,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isbetset",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5,
                          "src": "1276:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1305:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1276:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 115,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1268:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1268:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1268:42:0"
                },
                {
                  "expression": {
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 125,
                          "name": "bets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "1320:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Createbet_$8_storage_$",
                            "typeString": "mapping(address => struct Dicegame.Createbet storage ref)"
                          }
                        },
                        "id": 128,
                        "indexExpression": {
                          "expression": {
                            "id": 126,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1325:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1325:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1320:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Createbet_$8_storage",
                          "typeString": "struct Dicegame.Createbet storage ref"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "finl",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "1320:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 130,
                        "name": "random",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "1344:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                          "typeString": "function () view returns (uint8)"
                        }
                      },
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1344:8:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1320:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "1320:32:0"
                },
                {
                  "expression": {
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 134,
                      "name": "randomfactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1362:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 135,
                          "name": "bets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "1378:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Createbet_$8_storage_$",
                            "typeString": "mapping(address => struct Dicegame.Createbet storage ref)"
                          }
                        },
                        "id": 138,
                        "indexExpression": {
                          "expression": {
                            "id": 136,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1383:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1383:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1378:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Createbet_$8_storage",
                          "typeString": "struct Dicegame.Createbet storage ref"
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "finl",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "1378:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1362:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "1362:37:0"
                },
                {
                  "expression": {
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 142,
                          "name": "bets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "1409:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Createbet_$8_storage_$",
                            "typeString": "mapping(address => struct Dicegame.Createbet storage ref)"
                          }
                        },
                        "id": 145,
                        "indexExpression": {
                          "expression": {
                            "id": 143,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1414:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1414:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1409:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Createbet_$8_storage",
                          "typeString": "struct Dicegame.Createbet storage ref"
                        }
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isbetset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "1409:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1437:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1409:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "1409:33:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 150,
                          "name": "bets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "1456:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Createbet_$8_storage_$",
                            "typeString": "mapping(address => struct Dicegame.Createbet storage ref)"
                          }
                        },
                        "id": 153,
                        "indexExpression": {
                          "expression": {
                            "id": 151,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1461:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1461:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1456:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Createbet_$8_storage",
                          "typeString": "struct Dicegame.Createbet storage ref"
                        }
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "finl",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "1456:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 155,
                          "name": "bets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "1481:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Createbet_$8_storage_$",
                            "typeString": "mapping(address => struct Dicegame.Createbet storage ref)"
                          }
                        },
                        "id": 158,
                        "indexExpression": {
                          "expression": {
                            "id": 156,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1486:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1486:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1481:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Createbet_$8_storage",
                          "typeString": "struct Dicegame.Createbet storage ref"
                        }
                      },
                      "id": 159,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "presentbet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "1481:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1456:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 201,
                    "nodeType": "Block",
                    "src": "1741:166:0",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 187,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1788:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1788:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 189,
                                  "name": "bets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1816:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Createbet_$8_storage_$",
                                    "typeString": "mapping(address => struct Dicegame.Createbet storage ref)"
                                  }
                                },
                                "id": 192,
                                "indexExpression": {
                                  "expression": {
                                    "id": 190,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1821:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 191,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1821:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1816:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Createbet_$8_storage",
                                  "typeString": "struct Dicegame.Createbet storage ref"
                                }
                              },
                              "id": 193,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "presentbet",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3,
                              "src": "1816:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 194,
                                  "name": "bets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1861:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Createbet_$8_storage_$",
                                    "typeString": "mapping(address => struct Dicegame.Createbet storage ref)"
                                  }
                                },
                                "id": 197,
                                "indexExpression": {
                                  "expression": {
                                    "id": 195,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1866:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 196,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1866:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1861:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Createbet_$8_storage",
                                  "typeString": "struct Dicegame.Createbet storage ref"
                                }
                              },
                              "id": 198,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "finl",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7,
                              "src": "1861:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 186,
                            "name": "gameresult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "1760:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_uint8_$returns$__$",
                              "typeString": "function (address,uint8,uint8)"
                            }
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1760:136:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 200,
                        "nodeType": "EmitStatement",
                        "src": "1755:141:0"
                      }
                    ]
                  },
                  "id": 202,
                  "nodeType": "IfStatement",
                  "src": "1452:455:0",
                  "trueBody": {
                    "id": 185,
                    "nodeType": "Block",
                    "src": "1510:225:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "313030303030303030303030303030",
                              "id": 167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1553:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000000000_by_1",
                                "typeString": "int_const 100000000000000"
                              },
                              "value": "100000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_100000000000000_by_1",
                                "typeString": "int_const 100000000000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 163,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1532:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 164,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1532:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 162,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1524:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 161,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1524:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1524:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "1524:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1524:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 169,
                        "nodeType": "ExpressionStatement",
                        "src": "1524:45:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 171,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1616:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1616:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 173,
                                  "name": "bets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1644:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Createbet_$8_storage_$",
                                    "typeString": "mapping(address => struct Dicegame.Createbet storage ref)"
                                  }
                                },
                                "id": 176,
                                "indexExpression": {
                                  "expression": {
                                    "id": 174,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1649:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 175,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1649:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1644:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Createbet_$8_storage",
                                  "typeString": "struct Dicegame.Createbet storage ref"
                                }
                              },
                              "id": 177,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "presentbet",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3,
                              "src": "1644:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 178,
                                  "name": "bets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1689:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Createbet_$8_storage_$",
                                    "typeString": "mapping(address => struct Dicegame.Createbet storage ref)"
                                  }
                                },
                                "id": 181,
                                "indexExpression": {
                                  "expression": {
                                    "id": 179,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1694:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 180,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1694:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1689:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Createbet_$8_storage",
                                  "typeString": "struct Dicegame.Createbet storage ref"
                                }
                              },
                              "id": 182,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "finl",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7,
                              "src": "1689:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 170,
                            "name": "gameresult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "1588:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_uint8_$returns$__$",
                              "typeString": "function (address,uint8,uint8)"
                            }
                          },
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1588:136:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 184,
                        "nodeType": "EmitStatement",
                        "src": "1583:141:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 203,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1925:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1925:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 205,
                            "name": "bets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "1937:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Createbet_$8_storage_$",
                              "typeString": "mapping(address => struct Dicegame.Createbet storage ref)"
                            }
                          },
                          "id": 208,
                          "indexExpression": {
                            "expression": {
                              "id": 206,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1942:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1942:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1937:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Createbet_$8_storage",
                            "typeString": "struct Dicegame.Createbet storage ref"
                          }
                        },
                        "id": 209,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "presentbet",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3,
                        "src": "1937:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 210,
                            "name": "bets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "1966:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Createbet_$8_storage_$",
                              "typeString": "mapping(address => struct Dicegame.Createbet storage ref)"
                            }
                          },
                          "id": 213,
                          "indexExpression": {
                            "expression": {
                              "id": 211,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1971:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1971:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1966:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Createbet_$8_storage",
                            "typeString": "struct Dicegame.Createbet storage ref"
                          }
                        },
                        "id": 214,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "finl",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7,
                        "src": "1966:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 215,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1924:64:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(address,uint8,uint8)"
                    }
                  },
                  "functionReturnParameters": 114,
                  "id": 216,
                  "nodeType": "Return",
                  "src": "1917:71:0"
                }
              ]
            },
            "functionSelector": "cd5e3c5d",
            "id": 218,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "roll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1150:2:0"
            },
            "returnParameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "1198:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1198:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "1219:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1219:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "1238:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1184:69:0"
            },
            "scope": 266,
            "src": "1137:858:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 256,
              "nodeType": "Block",
              "src": "2048:213:0",
              "statements": [
                {
                  "assignments": [
                    224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 224,
                      "mutability": "mutable",
                      "name": "blockValue",
                      "nodeType": "VariableDeclaration",
                      "scope": 256,
                      "src": "2058:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 223,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2058:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 237,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 228,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "2110:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "number",
                                "nodeType": "MemberAccess",
                                "src": "2110:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2125:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "2110:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "expression": {
                                "id": 232,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "2129:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "2129:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2110:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 227,
                          "name": "blockhash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -5,
                          "src": "2100:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                            "typeString": "function (uint256) view returns (bytes32)"
                          }
                        },
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2100:45:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2079:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 225,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2079:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2079:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2058:97:0"
                },
                {
                  "expression": {
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 238,
                      "name": "blockValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 224,
                      "src": "2165:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 239,
                        "name": "blockValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "2178:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 242,
                            "name": "randomfactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "2199:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2191:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 240,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2191:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2191:21:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2178:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2165:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 246,
                  "nodeType": "ExpressionStatement",
                  "src": "2165:47:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 249,
                            "name": "blockValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "2235:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "hexValue": "35",
                            "id": 250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2248:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "src": "2235:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2229:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 247,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2229:5:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2229:21:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2253:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2229:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 222,
                  "id": 255,
                  "nodeType": "Return",
                  "src": "2222:32:0"
                }
              ]
            },
            "id": 257,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "random",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2016:2:0"
            },
            "returnParameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 257,
                  "src": "2041:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2041:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2040:7:0"
            },
            "scope": 266,
            "src": "2001:260:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 260,
              "nodeType": "Block",
              "src": "2438:2:0",
              "statements": []
            },
            "id": 261,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2418:2:0"
            },
            "returnParameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2438:0:0"
            },
            "scope": 266,
            "src": "2410:30:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 264,
              "nodeType": "Block",
              "src": "2504:2:0",
              "statements": []
            },
            "id": 265,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2484:2:0"
            },
            "returnParameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2504:0:0"
            },
            "scope": 266,
            "src": "2477:29:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 267,
        "src": "56:2452:0"
      }
    ],
    "src": "31:2478:0"
  },
  "bytecode": "608060405234801561001057600080fd5b506001805460ff1916600a1790556104f58061002d6000396000f3fe6080604052600436106100385760003560e01c80630441212014610041578063cd5e3c5d1461006c578063e9b903f4146100905761003f565b3661003f57005b005b34801561004d57600080fd5b506100566100b2565b604051610063919061041c565b60405180910390f35b34801561007857600080fd5b506100816100cd565b604051610063939291906103f8565b34801561009c57600080fd5b506100a5610297565b6040516100639190610427565b33600090815260208190526040902054610100900460ff1690565b336000908152602081905260408120548190819060ff6101009091041615156001146100f857600080fd5b610100610391565b336000908152602081905260408120805462ff000019166201000060ff9485168102919091179182905560018054919092048416939192916101449185911661044d565b82546101009290920a60ff818102199093169183160217909155336000908152602081905260409020805461ff001981169182905582166201000090910490911614159050610218576040513390600090655af3107a40009082818181858883f193505050501580156101bb573d6000803e3d6000fd5b5033600081815260208190526040908190205490517f3d5111bc39d83142c48bb36d748bd189343787af8ee3e85d6ac090245fac1fd29261020b92909160ff8083169262010000900416906103f8565b60405180910390a1610270565b33600081815260208190526040908190205490517f3d5111bc39d83142c48bb36d748bd189343787af8ee3e85d6ac090245fac1fd29261026792909160ff8083169262010000900416906103f8565b60405180910390a15b50503360008181526020819052604090205490915060ff8082169162010000900416909192565b33600090815260208190526040812054610100900460ff16156102b957600080fd5b336000908152602081905260409020805461ff0019166101001790556102dd610391565b336000908152602081905260408120805460ff191660ff938416179081905560018054918416939092916103139185911661044d565b82546101009290920a60ff81810219909316918316021790915533600081815260208190526040908190205490517fecaea69e9326ebe5aa0b5282a1d0f49d704b5f0e79524d948a3540f071c45c3894506103729391909116906103dc565b60405180910390a1503360009081526020819052604090205460ff1690565b600080426103a0600143610472565b6103aa9190610435565b600154904091506103be9060ff1682610435565b90506103cb600582610489565b6103d690600161044d565b91505090565b6001600160a01b0392909216825260ff16602082015260400190565b6001600160a01b0393909316835260ff918216602084015216604082015260600190565b901515815260200190565b60ff91909116815260200190565b60008219821115610448576104486104a9565b500190565b600060ff821660ff84168060ff0382111561046a5761046a6104a9565b019392505050565b600082821015610484576104846104a9565b500390565b6000826104a457634e487b7160e01b81526012600452602481fd5b500690565b634e487b7160e01b600052601160045260246000fdfea26469706673582212204003a294fe29c7c83724633709e444c9361ed0696d3df0bb0420284c4d827b9264736f6c63430008000033",
  "bytecodeSha1": "df292220e2f6f63b7cd2498d7d06a5a7b79389b0",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.0+commit.c7dfd78e"
  },
  "contractName": "Dicegame",
  "coverageMap": {
    "branches": {
      "0": {
        "Dicegame.getNewbet": {
          "19": [
            817,
            851,
            true
          ]
        },
        "Dicegame.roll": {
          "17": [
            1276,
            1309,
            true
          ],
          "18": [
            1456,
            1508,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Dicegame.getNewbet": {
          "9": [
            809,
            852
          ],
          "10": [
            862,
            894
          ],
          "11": [
            904,
            942
          ],
          "12": [
            952,
            995
          ],
          "13": [
            1005,
            1062
          ],
          "14": [
            1072,
            1106
          ]
        },
        "Dicegame.isbetset": {
          "0": [
            686,
            718
          ]
        },
        "Dicegame.random": {
          "15": [
            2165,
            2212
          ],
          "16": [
            2222,
            2254
          ]
        },
        "Dicegame.roll": {
          "1": [
            1268,
            1310
          ],
          "2": [
            1320,
            1352
          ],
          "3": [
            1362,
            1399
          ],
          "4": [
            1409,
            1442
          ],
          "5": [
            1524,
            1569
          ],
          "6": [
            1583,
            1724
          ],
          "7": [
            1755,
            1896
          ],
          "8": [
            1917,
            1988
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "6080604052600436106100385760003560e01c80630441212014610041578063cd5e3c5d1461006c578063e9b903f4146100905761003f565b3661003f57005b005b34801561004d57600080fd5b506100566100b2565b604051610063919061041c565b60405180910390f35b34801561007857600080fd5b506100816100cd565b604051610063939291906103f8565b34801561009c57600080fd5b506100a5610297565b6040516100639190610427565b33600090815260208190526040902054610100900460ff1690565b336000908152602081905260408120548190819060ff6101009091041615156001146100f857600080fd5b610100610391565b336000908152602081905260408120805462ff000019166201000060ff9485168102919091179182905560018054919092048416939192916101449185911661044d565b82546101009290920a60ff818102199093169183160217909155336000908152602081905260409020805461ff001981169182905582166201000090910490911614159050610218576040513390600090655af3107a40009082818181858883f193505050501580156101bb573d6000803e3d6000fd5b5033600081815260208190526040908190205490517f3d5111bc39d83142c48bb36d748bd189343787af8ee3e85d6ac090245fac1fd29261020b92909160ff8083169262010000900416906103f8565b60405180910390a1610270565b33600081815260208190526040908190205490517f3d5111bc39d83142c48bb36d748bd189343787af8ee3e85d6ac090245fac1fd29261026792909160ff8083169262010000900416906103f8565b60405180910390a15b50503360008181526020819052604090205490915060ff8082169162010000900416909192565b33600090815260208190526040812054610100900460ff16156102b957600080fd5b336000908152602081905260409020805461ff0019166101001790556102dd610391565b336000908152602081905260408120805460ff191660ff938416179081905560018054918416939092916103139185911661044d565b82546101009290920a60ff81810219909316918316021790915533600081815260208190526040908190205490517fecaea69e9326ebe5aa0b5282a1d0f49d704b5f0e79524d948a3540f071c45c3894506103729391909116906103dc565b60405180910390a1503360009081526020819052604090205460ff1690565b600080426103a0600143610472565b6103aa9190610435565b600154904091506103be9060ff1682610435565b90506103cb600582610489565b6103d690600161044d565b91505090565b6001600160a01b0392909216825260ff16602082015260400190565b6001600160a01b0393909316835260ff918216602084015216604082015260600190565b901515815260200190565b60ff91909116815260200190565b60008219821115610448576104486104a9565b500190565b600060ff821660ff84168060ff0382111561046a5761046a6104a9565b019392505050565b600082821015610484576104846104a9565b500390565b6000826104a457634e487b7160e01b81526012600452602481fd5b500690565b634e487b7160e01b600052601160045260246000fdfea26469706673582212204003a294fe29c7c83724633709e444c9361ed0696d3df0bb0420284c4d827b9264736f6c63430008000033",
  "deployedSourceMap": "56:2452:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;629:96;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1137:858;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;755:358::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;629:96::-;698:10;670:4;693:16;;;;;;;;;;:25;;;;;;;629:96::o;1137:858::-;1281:10;1198:7;1276:16;;;;;;;;;;:25;1198:7;;;;1276:25;;;;;;:33;;:25;:33;1268:42;;;;;;1344:8;:6;:8::i;:::-;1325:10;1320:4;:16;;;;;;;;;;:32;;-1:-1:-1;;1320:32:0;;;;;;;;;;;;;;;;-1:-1:-1;1362:37:0;;1378:21;;;;;;;-1:-1:-1;;1320:4:0;1362:37;;1378:21;;1362:37;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1414:10;-1:-1:-1;1409:16:0;;;;;;;;;;:33;;-1:-1:-1;;1409:33:0;;;;;;1481:27;;1456:21;;;;;;;:52;1452:455;;-1:-1:-1;1452:455:0;;1524:45;;1532:10;;1524:45;;1553:15;;1524:45;;;;1553:15;1532:10;1524:45;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1616:10:0;1644:4;:16;;;;;;;;;;;;:27;1588:136;;;;;;1616:10;;1644:27;;;;;1689:21;;;;;1588:136;:::i;:::-;;;;;;;;1452:455;;;1788:10;1816:4;:16;;;;;;;;;;;;:27;1760:136;;;;;;1788:10;;1816:27;;;;;1861:21;;;;;1760:136;:::i;:::-;;;;;;;;1452:455;-1:-1:-1;;1925:10:0;1937:4;:16;;;;;;;;;;:27;1925:10;;-1:-1:-1;1937:27:0;;;;;1966:21;;;;1137:858;;;:::o;755:358::-;822:10;792:5;817:16;;;;;;;;;;:25;;;;;;:34;809:43;;;;;;867:10;862:4;:16;;;;;;;;;;:32;;-1:-1:-1;;862:32:0;;;;;934:8;:6;:8::i;:::-;909:10;904:4;:16;;;;;;;;;;:38;;-1:-1:-1;;904:38:0;;;;;;;;;;-1:-1:-1;952:43:0;;968:27;;;;-1:-1:-1;;904:4:0;952:43;;968:27;;952:43;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1022:10;-1:-1:-1;1034:16:0;;;;;;;;;;;;:27;1010:52;;;;-1:-1:-1;1010:52:0;;1034:27;;;;;1010:52;:::i;:::-;;;;;;;;-1:-1:-1;1084:10:0;1079:4;:16;;;;;;;;;;:27;;;755:358;:::o;2001:260::-;2041:5;;2129:15;2110:16;2125:1;2110:12;:16;:::i;:::-;:34;;;;:::i;:::-;2199:12;;2100:45;;;-1:-1:-1;2178:34:0;;2199:12;;2100:45;2178:34;:::i;:::-;2165:47;-1:-1:-1;2235:14:0;2248:1;2165:47;2235:14;:::i;:::-;2229:25;;2253:1;2229:25;:::i;:::-;2222:32;;;2001:260;:::o;14:281:1:-;-1:-1:-1;;;;;202:32:1;;;;184:51;;283:4;271:17;266:2;251:18;;244:45;172:2;157:18;;139:156::o;300:359::-;-1:-1:-1;;;;;512:32:1;;;;494:51;;593:4;581:17;;;576:2;561:18;;554:45;635:17;630:2;615:18;;608:45;482:2;467:18;;449:210::o;664:187::-;829:14;;822:22;804:41;;792:2;777:18;;759:92::o;856:184::-;1028:4;1016:17;;;;998:36;;986:2;971:18;;953:87::o;1045:128::-;;1116:1;1112:6;1109:1;1106:13;1103:2;;;1122:18;;:::i;:::-;-1:-1:-1;1158:9:1;;1093:80::o;1178:204::-;;1252:4;1249:1;1245:12;1284:4;1281:1;1277:12;1319:3;1313:4;1309:14;1304:3;1301:23;1298:2;;;1327:18;;:::i;:::-;1363:13;;1224:158;-1:-1:-1;;;1224:158:1:o;1387:125::-;;1455:1;1452;1449:8;1446:2;;;1460:18;;:::i;:::-;-1:-1:-1;1497:9:1;;1436:76::o;1517:209::-;;1575:1;1565:2;;-1:-1:-1;;;1600:31:1;;1654:4;1651:1;1644:15;1682:4;1607:1;1672:15;1565:2;-1:-1:-1;1711:9:1;;1555:171::o;1731:127::-;1792:10;1787:3;1783:20;1780:1;1773:31;1823:4;1820:1;1813:15;1847:4;1844:1;1837:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    56,
    2508
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4412120 EQ PUSH2 0x41 JUMPI DUP1 PUSH4 0xCD5E3C5D EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0xE9B903F4 EQ PUSH2 0x90 JUMPI PUSH2 0x3F JUMP JUMPDEST CALLDATASIZE PUSH2 0x3F JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56 PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x81 PUSH2 0xCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA5 PUSH2 0x297 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x427 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x100 PUSH2 0x391 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP2 SWAP1 SWAP3 DIV DUP5 AND SWAP4 SWAP2 SWAP3 SWAP2 PUSH2 0x144 SWAP2 DUP6 SWAP2 AND PUSH2 0x44D JUMP JUMPDEST DUP3 SLOAD PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP PUSH1 0xFF DUP2 DUP2 MUL NOT SWAP1 SWAP4 AND SWAP2 DUP4 AND MUL OR SWAP1 SWAP2 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xFF00 NOT DUP2 AND SWAP2 DUP3 SWAP1 SSTORE DUP3 AND PUSH3 0x10000 SWAP1 SWAP2 DIV SWAP1 SWAP2 AND EQ ISZERO SWAP1 POP PUSH2 0x218 JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x0 SWAP1 PUSH6 0x5AF3107A4000 SWAP1 DUP3 DUP2 DUP2 DUP2 DUP6 DUP9 DUP4 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH32 0x3D5111BC39D83142C48BB36D748BD189343787AF8EE3E85D6AC090245FAC1FD2 SWAP3 PUSH2 0x20B SWAP3 SWAP1 SWAP2 PUSH1 0xFF DUP1 DUP4 AND SWAP3 PUSH3 0x10000 SWAP1 DIV AND SWAP1 PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x270 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH32 0x3D5111BC39D83142C48BB36D748BD189343787AF8EE3E85D6AC090245FAC1FD2 SWAP3 PUSH2 0x267 SWAP3 SWAP1 SWAP2 PUSH1 0xFF DUP1 DUP4 AND SWAP3 PUSH3 0x10000 SWAP1 DIV AND SWAP1 PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH3 0x10000 SWAP1 DIV AND SWAP1 SWAP2 SWAP3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH2 0x2DD PUSH2 0x391 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP4 DUP5 AND OR SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP2 DUP5 AND SWAP4 SWAP1 SWAP3 SWAP2 PUSH2 0x313 SWAP2 DUP6 SWAP2 AND PUSH2 0x44D JUMP JUMPDEST DUP3 SLOAD PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP PUSH1 0xFF DUP2 DUP2 MUL NOT SWAP1 SWAP4 AND SWAP2 DUP4 AND MUL OR SWAP1 SWAP2 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH32 0xECAEA69E9326EBE5AA0B5282A1D0F49D704B5F0E79524D948A3540F071C45C38 SWAP5 POP PUSH2 0x372 SWAP4 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP PUSH2 0x3A0 PUSH1 0x1 NUMBER PUSH2 0x472 JUMP JUMPDEST PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x435 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 BLOCKHASH SWAP2 POP PUSH2 0x3BE SWAP1 PUSH1 0xFF AND DUP3 PUSH2 0x435 JUMP JUMPDEST SWAP1 POP PUSH2 0x3CB PUSH1 0x5 DUP3 PUSH2 0x489 JUMP JUMPDEST PUSH2 0x3D6 SWAP1 PUSH1 0x1 PUSH2 0x44D JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0xFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0xFF SWAP2 DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x448 JUMPI PUSH2 0x448 PUSH2 0x4A9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x46A JUMPI PUSH2 0x46A PUSH2 0x4A9 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x484 JUMPI PUSH2 0x484 PUSH2 0x4A9 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4A4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH SUB LOG2 SWAP5 INVALID 0x29 0xC7 0xC8 CALLDATACOPY 0x24 PUSH4 0x3709E444 0xC9 CALLDATASIZE 0x1E 0xD0 PUSH10 0x6D3DF0BB0420284C4D82 PUSH28 0x9264736F6C6343000800003300000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        56,
        2508
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38"
    },
    "12": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4412120"
    },
    "25": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "EQ",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41"
    },
    "29": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCD5E3C5D"
    },
    "36": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C"
    },
    "40": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE9B903F4"
    },
    "47": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x90"
    },
    "51": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F"
    },
    "55": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "JUMP",
      "path": "0"
    },
    "56": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "57": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "58": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F"
    },
    "61": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "62": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "STOP",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        56,
        2508
      ],
      "op": "STOP",
      "path": "0"
    },
    "65": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "66": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "67": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "DUP1",
      "path": "0"
    },
    "68": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "69": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D"
    },
    "72": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "73": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "75": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "DUP1",
      "path": "0"
    },
    "76": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "REVERT",
      "path": "0"
    },
    "77": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "78": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "POP",
      "path": "0"
    },
    "79": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56"
    },
    "82": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2"
    },
    "85": {
      "fn": "Dicegame.isbetset",
      "jump": "i",
      "offset": [
        629,
        725
      ],
      "op": "JUMP",
      "path": "0"
    },
    "86": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "87": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "89": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "90": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63"
    },
    "93": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "94": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "95": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41C"
    },
    "98": {
      "fn": "Dicegame.isbetset",
      "jump": "i",
      "offset": [
        629,
        725
      ],
      "op": "JUMP",
      "path": "0"
    },
    "99": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "100": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "102": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "103": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "105": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "SUB",
      "path": "0"
    },
    "106": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "107": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "RETURN",
      "path": "0"
    },
    "108": {
      "fn": "Dicegame.roll",
      "offset": [
        1137,
        1995
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "109": {
      "fn": "Dicegame.roll",
      "offset": [
        1137,
        1995
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "110": {
      "fn": "Dicegame.roll",
      "offset": [
        1137,
        1995
      ],
      "op": "DUP1",
      "path": "0"
    },
    "111": {
      "fn": "Dicegame.roll",
      "offset": [
        1137,
        1995
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "112": {
      "fn": "Dicegame.roll",
      "offset": [
        1137,
        1995
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x78"
    },
    "115": {
      "fn": "Dicegame.roll",
      "offset": [
        1137,
        1995
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "116": {
      "fn": "Dicegame.roll",
      "offset": [
        1137,
        1995
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "118": {
      "fn": "Dicegame.roll",
      "offset": [
        1137,
        1995
      ],
      "op": "DUP1",
      "path": "0"
    },
    "119": {
      "fn": "Dicegame.roll",
      "offset": [
        1137,
        1995
      ],
      "op": "REVERT",
      "path": "0"
    },
    "120": {
      "fn": "Dicegame.roll",
      "offset": [
        1137,
        1995
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "121": {
      "fn": "Dicegame.roll",
      "offset": [
        1137,
        1995
      ],
      "op": "POP",
      "path": "0"
    },
    "122": {
      "fn": "Dicegame.roll",
      "offset": [
        1137,
        1995
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x81"
    },
    "125": {
      "fn": "Dicegame.roll",
      "offset": [
        1137,
        1995
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD"
    },
    "128": {
      "fn": "Dicegame.roll",
      "jump": "i",
      "offset": [
        1137,
        1995
      ],
      "op": "JUMP",
      "path": "0"
    },
    "129": {
      "fn": "Dicegame.roll",
      "offset": [
        1137,
        1995
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "130": {
      "fn": "Dicegame.roll",
      "offset": [
        1137,
        1995
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "132": {
      "fn": "Dicegame.roll",
      "offset": [
        1137,
        1995
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "133": {
      "fn": "Dicegame.roll",
      "offset": [
        1137,
        1995
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63"
    },
    "136": {
      "fn": "Dicegame.roll",
      "offset": [
        1137,
        1995
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "137": {
      "fn": "Dicegame.roll",
      "offset": [
        1137,
        1995
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "138": {
      "fn": "Dicegame.roll",
      "offset": [
        1137,
        1995
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "139": {
      "fn": "Dicegame.roll",
      "offset": [
        1137,
        1995
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "140": {
      "fn": "Dicegame.roll",
      "offset": [
        1137,
        1995
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F8"
    },
    "143": {
      "fn": "Dicegame.roll",
      "jump": "i",
      "offset": [
        1137,
        1995
      ],
      "op": "JUMP",
      "path": "0"
    },
    "144": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        755,
        1113
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "145": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        755,
        1113
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "146": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        755,
        1113
      ],
      "op": "DUP1",
      "path": "0"
    },
    "147": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        755,
        1113
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "148": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        755,
        1113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C"
    },
    "151": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        755,
        1113
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "152": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        755,
        1113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "154": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        755,
        1113
      ],
      "op": "DUP1",
      "path": "0"
    },
    "155": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        755,
        1113
      ],
      "op": "REVERT",
      "path": "0"
    },
    "156": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        755,
        1113
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "157": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        755,
        1113
      ],
      "op": "POP",
      "path": "0"
    },
    "158": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        755,
        1113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA5"
    },
    "161": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        755,
        1113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x297"
    },
    "164": {
      "fn": "Dicegame.getNewbet",
      "jump": "i",
      "offset": [
        755,
        1113
      ],
      "op": "JUMP",
      "path": "0"
    },
    "165": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        755,
        1113
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "166": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        755,
        1113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "168": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        755,
        1113
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "169": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        755,
        1113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63"
    },
    "172": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        755,
        1113
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "173": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        755,
        1113
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "174": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        755,
        1113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x427"
    },
    "177": {
      "fn": "Dicegame.getNewbet",
      "jump": "i",
      "offset": [
        755,
        1113
      ],
      "op": "JUMP",
      "path": "0"
    },
    "178": {
      "fn": "Dicegame.isbetset",
      "offset": [
        629,
        725
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "179": {
      "fn": "Dicegame.isbetset",
      "offset": [
        698,
        708
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 0
    },
    "180": {
      "fn": "Dicegame.isbetset",
      "offset": [
        670,
        674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "182": {
      "fn": "Dicegame.isbetset",
      "offset": [
        693,
        709
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "183": {
      "fn": "Dicegame.isbetset",
      "offset": [
        693,
        709
      ],
      "op": "DUP2",
      "path": "0"
    },
    "184": {
      "fn": "Dicegame.isbetset",
      "offset": [
        693,
        709
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "185": {
      "fn": "Dicegame.isbetset",
      "offset": [
        693,
        709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "187": {
      "fn": "Dicegame.isbetset",
      "offset": [
        693,
        709
      ],
      "op": "DUP2",
      "path": "0"
    },
    "188": {
      "fn": "Dicegame.isbetset",
      "offset": [
        693,
        709
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "189": {
      "fn": "Dicegame.isbetset",
      "offset": [
        693,
        709
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "190": {
      "fn": "Dicegame.isbetset",
      "offset": [
        693,
        709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "192": {
      "fn": "Dicegame.isbetset",
      "offset": [
        693,
        709
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "193": {
      "fn": "Dicegame.isbetset",
      "offset": [
        693,
        709
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "194": {
      "fn": "Dicegame.isbetset",
      "offset": [
        693,
        718
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "195": {
      "fn": "Dicegame.isbetset",
      "offset": [
        693,
        718
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "198": {
      "fn": "Dicegame.isbetset",
      "offset": [
        693,
        718
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "199": {
      "fn": "Dicegame.isbetset",
      "offset": [
        693,
        718
      ],
      "op": "DIV",
      "path": "0"
    },
    "200": {
      "fn": "Dicegame.isbetset",
      "offset": [
        693,
        718
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "202": {
      "fn": "Dicegame.isbetset",
      "offset": [
        693,
        718
      ],
      "op": "AND",
      "path": "0"
    },
    "203": {
      "fn": "Dicegame.isbetset",
      "offset": [
        693,
        718
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "204": {
      "fn": "Dicegame.isbetset",
      "jump": "o",
      "offset": [
        629,
        725
      ],
      "op": "JUMP",
      "path": "0"
    },
    "205": {
      "fn": "Dicegame.roll",
      "offset": [
        1137,
        1995
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "206": {
      "fn": "Dicegame.roll",
      "offset": [
        1281,
        1291
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 1
    },
    "207": {
      "fn": "Dicegame.roll",
      "offset": [
        1198,
        1205
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "209": {
      "fn": "Dicegame.roll",
      "offset": [
        1276,
        1292
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "210": {
      "fn": "Dicegame.roll",
      "offset": [
        1276,
        1292
      ],
      "op": "DUP2",
      "path": "0"
    },
    "211": {
      "fn": "Dicegame.roll",
      "offset": [
        1276,
        1292
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "212": {
      "fn": "Dicegame.roll",
      "offset": [
        1276,
        1292
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "214": {
      "fn": "Dicegame.roll",
      "offset": [
        1276,
        1292
      ],
      "op": "DUP2",
      "path": "0"
    },
    "215": {
      "fn": "Dicegame.roll",
      "offset": [
        1276,
        1292
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "216": {
      "fn": "Dicegame.roll",
      "offset": [
        1276,
        1292
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "217": {
      "fn": "Dicegame.roll",
      "offset": [
        1276,
        1292
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "219": {
      "fn": "Dicegame.roll",
      "offset": [
        1276,
        1292
      ],
      "op": "DUP2",
      "path": "0"
    },
    "220": {
      "fn": "Dicegame.roll",
      "offset": [
        1276,
        1292
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "221": {
      "fn": "Dicegame.roll",
      "offset": [
        1276,
        1301
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "222": {
      "fn": "Dicegame.roll",
      "offset": [
        1198,
        1205
      ],
      "op": "DUP2",
      "path": "0"
    },
    "223": {
      "fn": "Dicegame.roll",
      "offset": [
        1198,
        1205
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "224": {
      "fn": "Dicegame.roll",
      "offset": [
        1198,
        1205
      ],
      "op": "DUP2",
      "path": "0"
    },
    "225": {
      "fn": "Dicegame.roll",
      "offset": [
        1198,
        1205
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "226": {
      "fn": "Dicegame.roll",
      "offset": [
        1276,
        1301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "228": {
      "fn": "Dicegame.roll",
      "offset": [
        1276,
        1301
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "231": {
      "fn": "Dicegame.roll",
      "offset": [
        1276,
        1301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "232": {
      "fn": "Dicegame.roll",
      "offset": [
        1276,
        1301
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "233": {
      "fn": "Dicegame.roll",
      "offset": [
        1276,
        1301
      ],
      "op": "DIV",
      "path": "0"
    },
    "234": {
      "fn": "Dicegame.roll",
      "offset": [
        1276,
        1301
      ],
      "op": "AND",
      "path": "0"
    },
    "235": {
      "fn": "Dicegame.roll",
      "offset": [
        1276,
        1309
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "236": {
      "fn": "Dicegame.roll",
      "offset": [
        1276,
        1309
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "237": {
      "fn": "Dicegame.roll",
      "offset": [
        1276,
        1301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "239": {
      "branch": 17,
      "fn": "Dicegame.roll",
      "offset": [
        1276,
        1309
      ],
      "op": "EQ",
      "path": "0"
    },
    "240": {
      "fn": "Dicegame.roll",
      "offset": [
        1268,
        1310
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF8"
    },
    "243": {
      "branch": 17,
      "fn": "Dicegame.roll",
      "offset": [
        1268,
        1310
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "244": {
      "fn": "Dicegame.roll",
      "offset": [
        1268,
        1310
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "246": {
      "fn": "Dicegame.roll",
      "offset": [
        1268,
        1310
      ],
      "op": "DUP1",
      "path": "0"
    },
    "247": {
      "fn": "Dicegame.roll",
      "offset": [
        1268,
        1310
      ],
      "op": "REVERT",
      "path": "0"
    },
    "248": {
      "fn": "Dicegame.roll",
      "offset": [
        1268,
        1310
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "249": {
      "fn": "Dicegame.roll",
      "offset": [
        1344,
        1352
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 2,
      "value": "0x100"
    },
    "252": {
      "fn": "Dicegame.roll",
      "offset": [
        1344,
        1350
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x391"
    },
    "255": {
      "fn": "Dicegame.roll",
      "jump": "i",
      "offset": [
        1344,
        1352
      ],
      "op": "JUMP",
      "path": "0"
    },
    "256": {
      "fn": "Dicegame.roll",
      "offset": [
        1344,
        1352
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "257": {
      "fn": "Dicegame.roll",
      "offset": [
        1325,
        1335
      ],
      "op": "CALLER",
      "path": "0"
    },
    "258": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1324
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "260": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1336
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "261": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1336
      ],
      "op": "DUP2",
      "path": "0"
    },
    "262": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1336
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "263": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1336
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "265": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1336
      ],
      "op": "DUP2",
      "path": "0"
    },
    "266": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1336
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "267": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1336
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "268": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1336
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "270": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1336
      ],
      "op": "DUP2",
      "path": "0"
    },
    "271": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1336
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "272": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1352
      ],
      "op": "DUP1",
      "path": "0"
    },
    "273": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1352
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "274": {
      "op": "PUSH3",
      "value": "0xFF0000"
    },
    "278": {
      "op": "NOT"
    },
    "279": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1352
      ],
      "op": "AND",
      "path": "0"
    },
    "280": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1352
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x10000"
    },
    "284": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "286": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1352
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "287": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1352
      ],
      "op": "DUP6",
      "path": "0"
    },
    "288": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1352
      ],
      "op": "AND",
      "path": "0"
    },
    "289": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1352
      ],
      "op": "DUP2",
      "path": "0"
    },
    "290": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1352
      ],
      "op": "MUL",
      "path": "0"
    },
    "291": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1352
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "292": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "293": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1352
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "294": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1352
      ],
      "op": "OR",
      "path": "0"
    },
    "295": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1352
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "296": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1352
      ],
      "op": "DUP3",
      "path": "0"
    },
    "297": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "298": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1352
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "301": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 3
    },
    "302": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "303": {
      "fn": "Dicegame.roll",
      "offset": [
        1378,
        1399
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "304": {
      "fn": "Dicegame.roll",
      "offset": [
        1378,
        1399
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "305": {
      "fn": "Dicegame.roll",
      "offset": [
        1378,
        1399
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "306": {
      "fn": "Dicegame.roll",
      "offset": [
        1378,
        1399
      ],
      "op": "DIV",
      "path": "0"
    },
    "307": {
      "fn": "Dicegame.roll",
      "offset": [
        1378,
        1399
      ],
      "op": "DUP5",
      "path": "0"
    },
    "308": {
      "fn": "Dicegame.roll",
      "offset": [
        1378,
        1399
      ],
      "op": "AND",
      "path": "0"
    },
    "309": {
      "fn": "Dicegame.roll",
      "offset": [
        1378,
        1399
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "310": {
      "op": "SWAP2"
    },
    "311": {
      "op": "SWAP3"
    },
    "312": {
      "fn": "Dicegame.roll",
      "offset": [
        1320,
        1324
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "313": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144"
    },
    "316": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "317": {
      "fn": "Dicegame.roll",
      "offset": [
        1378,
        1399
      ],
      "op": "DUP6",
      "path": "0"
    },
    "318": {
      "fn": "Dicegame.roll",
      "offset": [
        1378,
        1399
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "319": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "AND",
      "path": "0"
    },
    "320": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44D"
    },
    "323": {
      "fn": "Dicegame.roll",
      "jump": "i",
      "offset": [
        1362,
        1399
      ],
      "op": "JUMP",
      "path": "0"
    },
    "324": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "325": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "DUP3",
      "path": "0"
    },
    "326": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "327": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "330": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "331": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "332": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "333": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "EXP",
      "path": "0"
    },
    "334": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "336": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "DUP2",
      "path": "0"
    },
    "337": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "DUP2",
      "path": "0"
    },
    "338": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "MUL",
      "path": "0"
    },
    "339": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "NOT",
      "path": "0"
    },
    "340": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "341": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "342": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "AND",
      "path": "0"
    },
    "343": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "344": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "DUP4",
      "path": "0"
    },
    "345": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "AND",
      "path": "0"
    },
    "346": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "MUL",
      "path": "0"
    },
    "347": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "OR",
      "path": "0"
    },
    "348": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "349": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "350": {
      "fn": "Dicegame.roll",
      "offset": [
        1362,
        1399
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "351": {
      "fn": "Dicegame.roll",
      "offset": [
        1414,
        1424
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 4
    },
    "352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "354": {
      "fn": "Dicegame.roll",
      "offset": [
        1409,
        1425
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "355": {
      "fn": "Dicegame.roll",
      "offset": [
        1409,
        1425
      ],
      "op": "DUP2",
      "path": "0"
    },
    "356": {
      "fn": "Dicegame.roll",
      "offset": [
        1409,
        1425
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "357": {
      "fn": "Dicegame.roll",
      "offset": [
        1409,
        1425
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "359": {
      "fn": "Dicegame.roll",
      "offset": [
        1409,
        1425
      ],
      "op": "DUP2",
      "path": "0"
    },
    "360": {
      "fn": "Dicegame.roll",
      "offset": [
        1409,
        1425
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "361": {
      "fn": "Dicegame.roll",
      "offset": [
        1409,
        1425
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "362": {
      "fn": "Dicegame.roll",
      "offset": [
        1409,
        1425
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "364": {
      "fn": "Dicegame.roll",
      "offset": [
        1409,
        1425
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "365": {
      "fn": "Dicegame.roll",
      "offset": [
        1409,
        1425
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "366": {
      "fn": "Dicegame.roll",
      "offset": [
        1409,
        1442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "367": {
      "fn": "Dicegame.roll",
      "offset": [
        1409,
        1442
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "368": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "371": {
      "op": "NOT"
    },
    "372": {
      "fn": "Dicegame.roll",
      "offset": [
        1409,
        1442
      ],
      "op": "DUP2",
      "path": "0"
    },
    "373": {
      "fn": "Dicegame.roll",
      "offset": [
        1409,
        1442
      ],
      "op": "AND",
      "path": "0"
    },
    "374": {
      "fn": "Dicegame.roll",
      "offset": [
        1409,
        1442
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "375": {
      "fn": "Dicegame.roll",
      "offset": [
        1409,
        1442
      ],
      "op": "DUP3",
      "path": "0"
    },
    "376": {
      "fn": "Dicegame.roll",
      "offset": [
        1409,
        1442
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "377": {
      "fn": "Dicegame.roll",
      "offset": [
        1409,
        1442
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "378": {
      "fn": "Dicegame.roll",
      "offset": [
        1481,
        1508
      ],
      "op": "DUP3",
      "path": "0"
    },
    "379": {
      "fn": "Dicegame.roll",
      "offset": [
        1481,
        1508
      ],
      "op": "AND",
      "path": "0"
    },
    "380": {
      "fn": "Dicegame.roll",
      "offset": [
        1456,
        1477
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x10000"
    },
    "384": {
      "fn": "Dicegame.roll",
      "offset": [
        1456,
        1477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "385": {
      "fn": "Dicegame.roll",
      "offset": [
        1456,
        1477
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "386": {
      "fn": "Dicegame.roll",
      "offset": [
        1456,
        1477
      ],
      "op": "DIV",
      "path": "0"
    },
    "387": {
      "fn": "Dicegame.roll",
      "offset": [
        1456,
        1477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "388": {
      "fn": "Dicegame.roll",
      "offset": [
        1456,
        1477
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "389": {
      "fn": "Dicegame.roll",
      "offset": [
        1456,
        1477
      ],
      "op": "AND",
      "path": "0"
    },
    "390": {
      "branch": 18,
      "fn": "Dicegame.roll",
      "offset": [
        1456,
        1508
      ],
      "op": "EQ",
      "path": "0"
    },
    "391": {
      "fn": "Dicegame.roll",
      "offset": [
        1452,
        1907
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "392": {
      "fn": "Dicegame.roll",
      "offset": [
        1452,
        1907
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "393": {
      "op": "POP"
    },
    "394": {
      "fn": "Dicegame.roll",
      "offset": [
        1452,
        1907
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x218"
    },
    "397": {
      "branch": 18,
      "fn": "Dicegame.roll",
      "offset": [
        1452,
        1907
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "398": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x40"
    },
    "400": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "401": {
      "fn": "Dicegame.roll",
      "offset": [
        1532,
        1542
      ],
      "op": "CALLER",
      "path": "0"
    },
    "402": {
      "fn": "Dicegame.roll",
      "offset": [
        1532,
        1542
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "403": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "405": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "406": {
      "fn": "Dicegame.roll",
      "offset": [
        1553,
        1568
      ],
      "op": "PUSH6",
      "path": "0",
      "value": "0x5AF3107A4000"
    },
    "413": {
      "fn": "Dicegame.roll",
      "offset": [
        1553,
        1568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "414": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "DUP3",
      "path": "0"
    },
    "415": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "DUP2",
      "path": "0"
    },
    "416": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "DUP2",
      "path": "0"
    },
    "417": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "DUP2",
      "path": "0"
    },
    "418": {
      "fn": "Dicegame.roll",
      "offset": [
        1553,
        1568
      ],
      "op": "DUP6",
      "path": "0"
    },
    "419": {
      "fn": "Dicegame.roll",
      "offset": [
        1532,
        1542
      ],
      "op": "DUP9",
      "path": "0"
    },
    "420": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "DUP4",
      "path": "0"
    },
    "421": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "CALL",
      "path": "0"
    },
    "422": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "423": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "POP",
      "path": "0"
    },
    "424": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "POP",
      "path": "0"
    },
    "425": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "POP",
      "path": "0"
    },
    "426": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "POP",
      "path": "0"
    },
    "427": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "428": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "DUP1",
      "path": "0"
    },
    "429": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "430": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BB"
    },
    "433": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "434": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "435": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "437": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "DUP1",
      "path": "0"
    },
    "438": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "439": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "440": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "442": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "REVERT",
      "path": "0"
    },
    "443": {
      "fn": "Dicegame.roll",
      "offset": [
        1524,
        1569
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "444": {
      "op": "POP"
    },
    "445": {
      "fn": "Dicegame.roll",
      "offset": [
        1616,
        1626
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 6
    },
    "446": {
      "fn": "Dicegame.roll",
      "offset": [
        1644,
        1648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "448": {
      "fn": "Dicegame.roll",
      "offset": [
        1644,
        1660
      ],
      "op": "DUP2",
      "path": "0"
    },
    "449": {
      "fn": "Dicegame.roll",
      "offset": [
        1644,
        1660
      ],
      "op": "DUP2",
      "path": "0"
    },
    "450": {
      "fn": "Dicegame.roll",
      "offset": [
        1644,
        1660
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "451": {
      "fn": "Dicegame.roll",
      "offset": [
        1644,
        1660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "453": {
      "fn": "Dicegame.roll",
      "offset": [
        1644,
        1660
      ],
      "op": "DUP2",
      "path": "0"
    },
    "454": {
      "fn": "Dicegame.roll",
      "offset": [
        1644,
        1660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "455": {
      "fn": "Dicegame.roll",
      "offset": [
        1644,
        1660
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "456": {
      "fn": "Dicegame.roll",
      "offset": [
        1644,
        1660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "458": {
      "fn": "Dicegame.roll",
      "offset": [
        1644,
        1660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "459": {
      "fn": "Dicegame.roll",
      "offset": [
        1644,
        1660
      ],
      "op": "DUP2",
      "path": "0"
    },
    "460": {
      "fn": "Dicegame.roll",
      "offset": [
        1644,
        1660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "461": {
      "fn": "Dicegame.roll",
      "offset": [
        1644,
        1660
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "462": {
      "fn": "Dicegame.roll",
      "offset": [
        1644,
        1671
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "463": {
      "fn": "Dicegame.roll",
      "offset": [
        1588,
        1724
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "464": {
      "fn": "Dicegame.roll",
      "offset": [
        1588,
        1724
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "465": {
      "fn": "Dicegame.roll",
      "offset": [
        1588,
        1724
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x3D5111BC39D83142C48BB36D748BD189343787AF8EE3E85D6AC090245FAC1FD2"
    },
    "498": {
      "fn": "Dicegame.roll",
      "offset": [
        1588,
        1724
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "499": {
      "fn": "Dicegame.roll",
      "offset": [
        1588,
        1724
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20B"
    },
    "502": {
      "fn": "Dicegame.roll",
      "offset": [
        1588,
        1724
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "503": {
      "fn": "Dicegame.roll",
      "offset": [
        1616,
        1626
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "504": {
      "fn": "Dicegame.roll",
      "offset": [
        1616,
        1626
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "505": {
      "fn": "Dicegame.roll",
      "offset": [
        1644,
        1671
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "507": {
      "fn": "Dicegame.roll",
      "offset": [
        1644,
        1671
      ],
      "op": "DUP1",
      "path": "0"
    },
    "508": {
      "fn": "Dicegame.roll",
      "offset": [
        1644,
        1671
      ],
      "op": "DUP4",
      "path": "0"
    },
    "509": {
      "fn": "Dicegame.roll",
      "offset": [
        1644,
        1671
      ],
      "op": "AND",
      "path": "0"
    },
    "510": {
      "fn": "Dicegame.roll",
      "offset": [
        1644,
        1671
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "511": {
      "fn": "Dicegame.roll",
      "offset": [
        1689,
        1710
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x10000"
    },
    "515": {
      "fn": "Dicegame.roll",
      "offset": [
        1689,
        1710
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "516": {
      "fn": "Dicegame.roll",
      "offset": [
        1689,
        1710
      ],
      "op": "DIV",
      "path": "0"
    },
    "517": {
      "fn": "Dicegame.roll",
      "offset": [
        1689,
        1710
      ],
      "op": "AND",
      "path": "0"
    },
    "518": {
      "fn": "Dicegame.roll",
      "offset": [
        1689,
        1710
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "519": {
      "fn": "Dicegame.roll",
      "offset": [
        1588,
        1724
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F8"
    },
    "522": {
      "fn": "Dicegame.roll",
      "jump": "i",
      "offset": [
        1588,
        1724
      ],
      "op": "JUMP",
      "path": "0"
    },
    "523": {
      "fn": "Dicegame.roll",
      "offset": [
        1588,
        1724
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "524": {
      "fn": "Dicegame.roll",
      "offset": [
        1588,
        1724
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "526": {
      "fn": "Dicegame.roll",
      "offset": [
        1588,
        1724
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "527": {
      "fn": "Dicegame.roll",
      "offset": [
        1588,
        1724
      ],
      "op": "DUP1",
      "path": "0"
    },
    "528": {
      "fn": "Dicegame.roll",
      "offset": [
        1588,
        1724
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "529": {
      "fn": "Dicegame.roll",
      "offset": [
        1588,
        1724
      ],
      "op": "SUB",
      "path": "0"
    },
    "530": {
      "fn": "Dicegame.roll",
      "offset": [
        1588,
        1724
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "531": {
      "fn": "Dicegame.roll",
      "offset": [
        1588,
        1724
      ],
      "op": "LOG1",
      "path": "0"
    },
    "532": {
      "fn": "Dicegame.roll",
      "offset": [
        1452,
        1907
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x270"
    },
    "535": {
      "fn": "Dicegame.roll",
      "offset": [
        1452,
        1907
      ],
      "op": "JUMP",
      "path": "0"
    },
    "536": {
      "fn": "Dicegame.roll",
      "offset": [
        1452,
        1907
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "537": {
      "fn": "Dicegame.roll",
      "offset": [
        1788,
        1798
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 7
    },
    "538": {
      "fn": "Dicegame.roll",
      "offset": [
        1816,
        1820
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "540": {
      "fn": "Dicegame.roll",
      "offset": [
        1816,
        1832
      ],
      "op": "DUP2",
      "path": "0"
    },
    "541": {
      "fn": "Dicegame.roll",
      "offset": [
        1816,
        1832
      ],
      "op": "DUP2",
      "path": "0"
    },
    "542": {
      "fn": "Dicegame.roll",
      "offset": [
        1816,
        1832
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "543": {
      "fn": "Dicegame.roll",
      "offset": [
        1816,
        1832
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "545": {
      "fn": "Dicegame.roll",
      "offset": [
        1816,
        1832
      ],
      "op": "DUP2",
      "path": "0"
    },
    "546": {
      "fn": "Dicegame.roll",
      "offset": [
        1816,
        1832
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "547": {
      "fn": "Dicegame.roll",
      "offset": [
        1816,
        1832
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "548": {
      "fn": "Dicegame.roll",
      "offset": [
        1816,
        1832
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "550": {
      "fn": "Dicegame.roll",
      "offset": [
        1816,
        1832
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "551": {
      "fn": "Dicegame.roll",
      "offset": [
        1816,
        1832
      ],
      "op": "DUP2",
      "path": "0"
    },
    "552": {
      "fn": "Dicegame.roll",
      "offset": [
        1816,
        1832
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "553": {
      "fn": "Dicegame.roll",
      "offset": [
        1816,
        1832
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "554": {
      "fn": "Dicegame.roll",
      "offset": [
        1816,
        1843
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "555": {
      "fn": "Dicegame.roll",
      "offset": [
        1760,
        1896
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "556": {
      "fn": "Dicegame.roll",
      "offset": [
        1760,
        1896
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "557": {
      "fn": "Dicegame.roll",
      "offset": [
        1760,
        1896
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x3D5111BC39D83142C48BB36D748BD189343787AF8EE3E85D6AC090245FAC1FD2"
    },
    "590": {
      "fn": "Dicegame.roll",
      "offset": [
        1760,
        1896
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "591": {
      "fn": "Dicegame.roll",
      "offset": [
        1760,
        1896
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x267"
    },
    "594": {
      "fn": "Dicegame.roll",
      "offset": [
        1760,
        1896
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "595": {
      "fn": "Dicegame.roll",
      "offset": [
        1788,
        1798
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "596": {
      "fn": "Dicegame.roll",
      "offset": [
        1788,
        1798
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "597": {
      "fn": "Dicegame.roll",
      "offset": [
        1816,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "599": {
      "fn": "Dicegame.roll",
      "offset": [
        1816,
        1843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "600": {
      "fn": "Dicegame.roll",
      "offset": [
        1816,
        1843
      ],
      "op": "DUP4",
      "path": "0"
    },
    "601": {
      "fn": "Dicegame.roll",
      "offset": [
        1816,
        1843
      ],
      "op": "AND",
      "path": "0"
    },
    "602": {
      "fn": "Dicegame.roll",
      "offset": [
        1816,
        1843
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "603": {
      "fn": "Dicegame.roll",
      "offset": [
        1861,
        1882
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x10000"
    },
    "607": {
      "fn": "Dicegame.roll",
      "offset": [
        1861,
        1882
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "608": {
      "fn": "Dicegame.roll",
      "offset": [
        1861,
        1882
      ],
      "op": "DIV",
      "path": "0"
    },
    "609": {
      "fn": "Dicegame.roll",
      "offset": [
        1861,
        1882
      ],
      "op": "AND",
      "path": "0"
    },
    "610": {
      "fn": "Dicegame.roll",
      "offset": [
        1861,
        1882
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "611": {
      "fn": "Dicegame.roll",
      "offset": [
        1760,
        1896
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F8"
    },
    "614": {
      "fn": "Dicegame.roll",
      "jump": "i",
      "offset": [
        1760,
        1896
      ],
      "op": "JUMP",
      "path": "0"
    },
    "615": {
      "fn": "Dicegame.roll",
      "offset": [
        1760,
        1896
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "616": {
      "fn": "Dicegame.roll",
      "offset": [
        1760,
        1896
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "618": {
      "fn": "Dicegame.roll",
      "offset": [
        1760,
        1896
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "619": {
      "fn": "Dicegame.roll",
      "offset": [
        1760,
        1896
      ],
      "op": "DUP1",
      "path": "0"
    },
    "620": {
      "fn": "Dicegame.roll",
      "offset": [
        1760,
        1896
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "621": {
      "fn": "Dicegame.roll",
      "offset": [
        1760,
        1896
      ],
      "op": "SUB",
      "path": "0"
    },
    "622": {
      "fn": "Dicegame.roll",
      "offset": [
        1760,
        1896
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "623": {
      "fn": "Dicegame.roll",
      "offset": [
        1760,
        1896
      ],
      "op": "LOG1",
      "path": "0"
    },
    "624": {
      "fn": "Dicegame.roll",
      "offset": [
        1452,
        1907
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "625": {
      "op": "POP"
    },
    "626": {
      "op": "POP"
    },
    "627": {
      "fn": "Dicegame.roll",
      "offset": [
        1925,
        1935
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 8
    },
    "628": {
      "fn": "Dicegame.roll",
      "offset": [
        1937,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "630": {
      "fn": "Dicegame.roll",
      "offset": [
        1937,
        1953
      ],
      "op": "DUP2",
      "path": "0"
    },
    "631": {
      "fn": "Dicegame.roll",
      "offset": [
        1937,
        1953
      ],
      "op": "DUP2",
      "path": "0"
    },
    "632": {
      "fn": "Dicegame.roll",
      "offset": [
        1937,
        1953
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "633": {
      "fn": "Dicegame.roll",
      "offset": [
        1937,
        1953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "635": {
      "fn": "Dicegame.roll",
      "offset": [
        1937,
        1953
      ],
      "op": "DUP2",
      "path": "0"
    },
    "636": {
      "fn": "Dicegame.roll",
      "offset": [
        1937,
        1953
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "637": {
      "fn": "Dicegame.roll",
      "offset": [
        1937,
        1953
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "638": {
      "fn": "Dicegame.roll",
      "offset": [
        1937,
        1953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "640": {
      "fn": "Dicegame.roll",
      "offset": [
        1937,
        1953
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "641": {
      "fn": "Dicegame.roll",
      "offset": [
        1937,
        1953
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "642": {
      "fn": "Dicegame.roll",
      "offset": [
        1937,
        1964
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "643": {
      "fn": "Dicegame.roll",
      "offset": [
        1925,
        1935
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "644": {
      "fn": "Dicegame.roll",
      "offset": [
        1925,
        1935
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "645": {
      "op": "POP"
    },
    "646": {
      "fn": "Dicegame.roll",
      "offset": [
        1937,
        1964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "648": {
      "fn": "Dicegame.roll",
      "offset": [
        1937,
        1964
      ],
      "op": "DUP1",
      "path": "0"
    },
    "649": {
      "fn": "Dicegame.roll",
      "offset": [
        1937,
        1964
      ],
      "op": "DUP3",
      "path": "0"
    },
    "650": {
      "fn": "Dicegame.roll",
      "offset": [
        1937,
        1964
      ],
      "op": "AND",
      "path": "0"
    },
    "651": {
      "fn": "Dicegame.roll",
      "offset": [
        1937,
        1964
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "652": {
      "fn": "Dicegame.roll",
      "offset": [
        1966,
        1987
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x10000"
    },
    "656": {
      "fn": "Dicegame.roll",
      "offset": [
        1966,
        1987
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "657": {
      "fn": "Dicegame.roll",
      "offset": [
        1966,
        1987
      ],
      "op": "DIV",
      "path": "0"
    },
    "658": {
      "fn": "Dicegame.roll",
      "offset": [
        1966,
        1987
      ],
      "op": "AND",
      "path": "0"
    },
    "659": {
      "fn": "Dicegame.roll",
      "offset": [
        1137,
        1995
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "660": {
      "fn": "Dicegame.roll",
      "offset": [
        1137,
        1995
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "661": {
      "fn": "Dicegame.roll",
      "offset": [
        1137,
        1995
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "662": {
      "fn": "Dicegame.roll",
      "jump": "o",
      "offset": [
        1137,
        1995
      ],
      "op": "JUMP",
      "path": "0"
    },
    "663": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        755,
        1113
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "664": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        822,
        832
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 9
    },
    "665": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        792,
        797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "667": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        817,
        833
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "668": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        817,
        833
      ],
      "op": "DUP2",
      "path": "0"
    },
    "669": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        817,
        833
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "670": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        817,
        833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "672": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        817,
        833
      ],
      "op": "DUP2",
      "path": "0"
    },
    "673": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        817,
        833
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "674": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        817,
        833
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "675": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        817,
        833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "677": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        817,
        833
      ],
      "op": "DUP2",
      "path": "0"
    },
    "678": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        817,
        833
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "679": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        817,
        842
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "680": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        817,
        842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "683": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        817,
        842
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "684": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        817,
        842
      ],
      "op": "DIV",
      "path": "0"
    },
    "685": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        817,
        842
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "687": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        817,
        842
      ],
      "op": "AND",
      "path": "0"
    },
    "688": {
      "branch": 19,
      "fn": "Dicegame.getNewbet",
      "offset": [
        817,
        851
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "689": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        809,
        852
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B9"
    },
    "692": {
      "branch": 19,
      "fn": "Dicegame.getNewbet",
      "offset": [
        809,
        852
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "693": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        809,
        852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "695": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        809,
        852
      ],
      "op": "DUP1",
      "path": "0"
    },
    "696": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        809,
        852
      ],
      "op": "REVERT",
      "path": "0"
    },
    "697": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        809,
        852
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "698": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        867,
        877
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 10
    },
    "699": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        862,
        866
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "701": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        862,
        878
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "702": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        862,
        878
      ],
      "op": "DUP2",
      "path": "0"
    },
    "703": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        862,
        878
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "704": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        862,
        878
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "706": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        862,
        878
      ],
      "op": "DUP2",
      "path": "0"
    },
    "707": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        862,
        878
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "708": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        862,
        878
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "709": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        862,
        878
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "711": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        862,
        878
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "712": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        862,
        878
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "713": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        862,
        894
      ],
      "op": "DUP1",
      "path": "0"
    },
    "714": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        862,
        894
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "715": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "718": {
      "op": "NOT"
    },
    "719": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        862,
        894
      ],
      "op": "AND",
      "path": "0"
    },
    "720": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        862,
        894
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "723": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        862,
        894
      ],
      "op": "OR",
      "path": "0"
    },
    "724": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        862,
        894
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "725": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        862,
        894
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "726": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        934,
        942
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 11,
      "value": "0x2DD"
    },
    "729": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        934,
        940
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x391"
    },
    "732": {
      "fn": "Dicegame.getNewbet",
      "jump": "i",
      "offset": [
        934,
        942
      ],
      "op": "JUMP",
      "path": "0"
    },
    "733": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        934,
        942
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "734": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        909,
        919
      ],
      "op": "CALLER",
      "path": "0"
    },
    "735": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        904,
        908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "737": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        904,
        920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "738": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        904,
        920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "739": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        904,
        920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "740": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        904,
        920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "742": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        904,
        920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "743": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        904,
        920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "744": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        904,
        920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "745": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        904,
        920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "747": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        904,
        920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "748": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        904,
        920
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "749": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        904,
        942
      ],
      "op": "DUP1",
      "path": "0"
    },
    "750": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        904,
        942
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "751": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "753": {
      "op": "NOT"
    },
    "754": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        904,
        942
      ],
      "op": "AND",
      "path": "0"
    },
    "755": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        904,
        942
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "757": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        904,
        942
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "758": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        904,
        942
      ],
      "op": "DUP5",
      "path": "0"
    },
    "759": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        904,
        942
      ],
      "op": "AND",
      "path": "0"
    },
    "760": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        904,
        942
      ],
      "op": "OR",
      "path": "0"
    },
    "761": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        904,
        942
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "762": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        904,
        942
      ],
      "op": "DUP2",
      "path": "0"
    },
    "763": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        904,
        942
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "764": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        904,
        942
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "767": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 12
    },
    "768": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "769": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        968,
        995
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "770": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        968,
        995
      ],
      "op": "DUP5",
      "path": "0"
    },
    "771": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        968,
        995
      ],
      "op": "AND",
      "path": "0"
    },
    "772": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        968,
        995
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "773": {
      "op": "SWAP1"
    },
    "774": {
      "op": "SWAP3"
    },
    "775": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        904,
        908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "776": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x313"
    },
    "779": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "780": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        968,
        995
      ],
      "op": "DUP6",
      "path": "0"
    },
    "781": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        968,
        995
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "782": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "AND",
      "path": "0"
    },
    "783": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44D"
    },
    "786": {
      "fn": "Dicegame.getNewbet",
      "jump": "i",
      "offset": [
        952,
        995
      ],
      "op": "JUMP",
      "path": "0"
    },
    "787": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "788": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "DUP3",
      "path": "0"
    },
    "789": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "790": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "793": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "794": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "795": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "796": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "EXP",
      "path": "0"
    },
    "797": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "799": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "DUP2",
      "path": "0"
    },
    "800": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "DUP2",
      "path": "0"
    },
    "801": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "MUL",
      "path": "0"
    },
    "802": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "NOT",
      "path": "0"
    },
    "803": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "804": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "805": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "AND",
      "path": "0"
    },
    "806": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "807": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "DUP4",
      "path": "0"
    },
    "808": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "AND",
      "path": "0"
    },
    "809": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "MUL",
      "path": "0"
    },
    "810": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "OR",
      "path": "0"
    },
    "811": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "812": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "813": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        952,
        995
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "814": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1022,
        1032
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 13
    },
    "815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "817": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1034,
        1050
      ],
      "op": "DUP2",
      "path": "0"
    },
    "818": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1034,
        1050
      ],
      "op": "DUP2",
      "path": "0"
    },
    "819": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1034,
        1050
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "820": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1034,
        1050
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "822": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1034,
        1050
      ],
      "op": "DUP2",
      "path": "0"
    },
    "823": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1034,
        1050
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "824": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1034,
        1050
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "825": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1034,
        1050
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "827": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1034,
        1050
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "828": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1034,
        1050
      ],
      "op": "DUP2",
      "path": "0"
    },
    "829": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1034,
        1050
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "830": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1034,
        1050
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "831": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1034,
        1061
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "832": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1010,
        1062
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "833": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1010,
        1062
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "834": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1010,
        1062
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xECAEA69E9326EBE5AA0B5282A1D0F49D704B5F0E79524D948A3540F071C45C38"
    },
    "867": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1010,
        1062
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "868": {
      "op": "POP"
    },
    "869": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1010,
        1062
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x372"
    },
    "872": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1010,
        1062
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "873": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1034,
        1061
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "874": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1034,
        1061
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "875": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1034,
        1061
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "876": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1034,
        1061
      ],
      "op": "AND",
      "path": "0"
    },
    "877": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1034,
        1061
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "878": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1010,
        1062
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DC"
    },
    "881": {
      "fn": "Dicegame.getNewbet",
      "jump": "i",
      "offset": [
        1010,
        1062
      ],
      "op": "JUMP",
      "path": "0"
    },
    "882": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1010,
        1062
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "883": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1010,
        1062
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "885": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1010,
        1062
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "886": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1010,
        1062
      ],
      "op": "DUP1",
      "path": "0"
    },
    "887": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1010,
        1062
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "888": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1010,
        1062
      ],
      "op": "SUB",
      "path": "0"
    },
    "889": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1010,
        1062
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "890": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1010,
        1062
      ],
      "op": "LOG1",
      "path": "0"
    },
    "891": {
      "op": "POP"
    },
    "892": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1084,
        1094
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 14
    },
    "893": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1079,
        1083
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "895": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1079,
        1095
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "896": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1079,
        1095
      ],
      "op": "DUP2",
      "path": "0"
    },
    "897": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1079,
        1095
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "898": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1079,
        1095
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "900": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1079,
        1095
      ],
      "op": "DUP2",
      "path": "0"
    },
    "901": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1079,
        1095
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "902": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1079,
        1095
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "903": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1079,
        1095
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "905": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1079,
        1095
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "906": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1079,
        1095
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "907": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1079,
        1106
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "908": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1079,
        1106
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "910": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        1079,
        1106
      ],
      "op": "AND",
      "path": "0"
    },
    "911": {
      "fn": "Dicegame.getNewbet",
      "offset": [
        755,
        1113
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "912": {
      "fn": "Dicegame.getNewbet",
      "jump": "o",
      "offset": [
        755,
        1113
      ],
      "op": "JUMP",
      "path": "0"
    },
    "913": {
      "fn": "Dicegame.random",
      "offset": [
        2001,
        2261
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "914": {
      "fn": "Dicegame.random",
      "offset": [
        2041,
        2046
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "916": {
      "fn": "Dicegame.random",
      "offset": [
        2041,
        2046
      ],
      "op": "DUP1",
      "path": "0"
    },
    "917": {
      "fn": "Dicegame.random",
      "offset": [
        2129,
        2144
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "918": {
      "fn": "Dicegame.random",
      "offset": [
        2110,
        2126
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A0"
    },
    "921": {
      "fn": "Dicegame.random",
      "offset": [
        2125,
        2126
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "923": {
      "fn": "Dicegame.random",
      "offset": [
        2110,
        2122
      ],
      "op": "NUMBER",
      "path": "0"
    },
    "924": {
      "fn": "Dicegame.random",
      "offset": [
        2110,
        2126
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x472"
    },
    "927": {
      "fn": "Dicegame.random",
      "jump": "i",
      "offset": [
        2110,
        2126
      ],
      "op": "JUMP",
      "path": "0"
    },
    "928": {
      "fn": "Dicegame.random",
      "offset": [
        2110,
        2126
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "929": {
      "fn": "Dicegame.random",
      "offset": [
        2110,
        2144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AA"
    },
    "932": {
      "fn": "Dicegame.random",
      "offset": [
        2110,
        2144
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "933": {
      "fn": "Dicegame.random",
      "offset": [
        2110,
        2144
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "934": {
      "fn": "Dicegame.random",
      "offset": [
        2110,
        2144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x435"
    },
    "937": {
      "fn": "Dicegame.random",
      "jump": "i",
      "offset": [
        2110,
        2144
      ],
      "op": "JUMP",
      "path": "0"
    },
    "938": {
      "fn": "Dicegame.random",
      "offset": [
        2110,
        2144
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "939": {
      "fn": "Dicegame.random",
      "offset": [
        2199,
        2211
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x1"
    },
    "941": {
      "fn": "Dicegame.random",
      "offset": [
        2199,
        2211
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "942": {
      "fn": "Dicegame.random",
      "offset": [
        2100,
        2145
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "943": {
      "fn": "Dicegame.random",
      "offset": [
        2100,
        2145
      ],
      "op": "BLOCKHASH",
      "path": "0"
    },
    "944": {
      "fn": "Dicegame.random",
      "offset": [
        2100,
        2145
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "945": {
      "op": "POP"
    },
    "946": {
      "fn": "Dicegame.random",
      "offset": [
        2178,
        2212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BE"
    },
    "949": {
      "fn": "Dicegame.random",
      "offset": [
        2178,
        2212
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "950": {
      "fn": "Dicegame.random",
      "offset": [
        2199,
        2211
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "952": {
      "fn": "Dicegame.random",
      "offset": [
        2199,
        2211
      ],
      "op": "AND",
      "path": "0"
    },
    "953": {
      "fn": "Dicegame.random",
      "offset": [
        2100,
        2145
      ],
      "op": "DUP3",
      "path": "0"
    },
    "954": {
      "fn": "Dicegame.random",
      "offset": [
        2178,
        2212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x435"
    },
    "957": {
      "fn": "Dicegame.random",
      "jump": "i",
      "offset": [
        2178,
        2212
      ],
      "op": "JUMP",
      "path": "0"
    },
    "958": {
      "fn": "Dicegame.random",
      "offset": [
        2178,
        2212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "959": {
      "fn": "Dicegame.random",
      "offset": [
        2165,
        2212
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "960": {
      "op": "POP"
    },
    "961": {
      "fn": "Dicegame.random",
      "offset": [
        2235,
        2249
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 16,
      "value": "0x3CB"
    },
    "964": {
      "fn": "Dicegame.random",
      "offset": [
        2248,
        2249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "966": {
      "fn": "Dicegame.random",
      "offset": [
        2165,
        2212
      ],
      "op": "DUP3",
      "path": "0"
    },
    "967": {
      "fn": "Dicegame.random",
      "offset": [
        2235,
        2249
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x489"
    },
    "970": {
      "fn": "Dicegame.random",
      "jump": "i",
      "offset": [
        2235,
        2249
      ],
      "op": "JUMP",
      "path": "0"
    },
    "971": {
      "fn": "Dicegame.random",
      "offset": [
        2235,
        2249
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "972": {
      "fn": "Dicegame.random",
      "offset": [
        2229,
        2254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D6"
    },
    "975": {
      "fn": "Dicegame.random",
      "offset": [
        2229,
        2254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "976": {
      "fn": "Dicegame.random",
      "offset": [
        2253,
        2254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "978": {
      "fn": "Dicegame.random",
      "offset": [
        2229,
        2254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44D"
    },
    "981": {
      "fn": "Dicegame.random",
      "jump": "i",
      "offset": [
        2229,
        2254
      ],
      "op": "JUMP",
      "path": "0"
    },
    "982": {
      "fn": "Dicegame.random",
      "offset": [
        2229,
        2254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "983": {
      "fn": "Dicegame.random",
      "offset": [
        2222,
        2254
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "984": {
      "fn": "Dicegame.random",
      "offset": [
        2222,
        2254
      ],
      "op": "POP",
      "path": "0"
    },
    "985": {
      "fn": "Dicegame.random",
      "offset": [
        2222,
        2254
      ],
      "op": "POP",
      "path": "0"
    },
    "986": {
      "fn": "Dicegame.random",
      "offset": [
        2001,
        2261
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "987": {
      "fn": "Dicegame.random",
      "jump": "o",
      "offset": [
        2001,
        2261
      ],
      "op": "JUMP",
      "path": "0"
    },
    "988": {
      "op": "JUMPDEST"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "995": {
      "op": "SHL"
    },
    "996": {
      "op": "SUB"
    },
    "997": {
      "op": "SWAP3"
    },
    "998": {
      "op": "SWAP1"
    },
    "999": {
      "op": "SWAP3"
    },
    "1000": {
      "op": "AND"
    },
    "1001": {
      "op": "DUP3"
    },
    "1002": {
      "op": "MSTORE"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1005": {
      "op": "AND"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1008": {
      "op": "DUP3"
    },
    "1009": {
      "op": "ADD"
    },
    "1010": {
      "op": "MSTORE"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1013": {
      "op": "ADD"
    },
    "1014": {
      "op": "SWAP1"
    },
    "1015": {
      "jump": "o",
      "op": "JUMP"
    },
    "1016": {
      "op": "JUMPDEST"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1023": {
      "op": "SHL"
    },
    "1024": {
      "op": "SUB"
    },
    "1025": {
      "op": "SWAP4"
    },
    "1026": {
      "op": "SWAP1"
    },
    "1027": {
      "op": "SWAP4"
    },
    "1028": {
      "op": "AND"
    },
    "1029": {
      "op": "DUP4"
    },
    "1030": {
      "op": "MSTORE"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1033": {
      "op": "SWAP2"
    },
    "1034": {
      "op": "DUP3"
    },
    "1035": {
      "op": "AND"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1038": {
      "op": "DUP5"
    },
    "1039": {
      "op": "ADD"
    },
    "1040": {
      "op": "MSTORE"
    },
    "1041": {
      "op": "AND"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1044": {
      "op": "DUP3"
    },
    "1045": {
      "op": "ADD"
    },
    "1046": {
      "op": "MSTORE"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1049": {
      "op": "ADD"
    },
    "1050": {
      "op": "SWAP1"
    },
    "1051": {
      "jump": "o",
      "op": "JUMP"
    },
    "1052": {
      "op": "JUMPDEST"
    },
    "1053": {
      "op": "SWAP1"
    },
    "1054": {
      "op": "ISZERO"
    },
    "1055": {
      "op": "ISZERO"
    },
    "1056": {
      "op": "DUP2"
    },
    "1057": {
      "op": "MSTORE"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1060": {
      "op": "ADD"
    },
    "1061": {
      "op": "SWAP1"
    },
    "1062": {
      "jump": "o",
      "op": "JUMP"
    },
    "1063": {
      "op": "JUMPDEST"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1066": {
      "op": "SWAP2"
    },
    "1067": {
      "op": "SWAP1"
    },
    "1068": {
      "op": "SWAP2"
    },
    "1069": {
      "op": "AND"
    },
    "1070": {
      "op": "DUP2"
    },
    "1071": {
      "op": "MSTORE"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1074": {
      "op": "ADD"
    },
    "1075": {
      "op": "SWAP1"
    },
    "1076": {
      "jump": "o",
      "op": "JUMP"
    },
    "1077": {
      "op": "JUMPDEST"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1080": {
      "op": "DUP3"
    },
    "1081": {
      "op": "NOT"
    },
    "1082": {
      "op": "DUP3"
    },
    "1083": {
      "op": "GT"
    },
    "1084": {
      "op": "ISZERO"
    },
    "1085": {
      "op": "PUSH2",
      "value": "0x448"
    },
    "1088": {
      "op": "JUMPI"
    },
    "1089": {
      "op": "PUSH2",
      "value": "0x448"
    },
    "1092": {
      "op": "PUSH2",
      "value": "0x4A9"
    },
    "1095": {
      "jump": "i",
      "op": "JUMP"
    },
    "1096": {
      "op": "JUMPDEST"
    },
    "1097": {
      "op": "POP"
    },
    "1098": {
      "op": "ADD"
    },
    "1099": {
      "op": "SWAP1"
    },
    "1100": {
      "jump": "o",
      "op": "JUMP"
    },
    "1101": {
      "op": "JUMPDEST"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1106": {
      "op": "DUP3"
    },
    "1107": {
      "op": "AND"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1110": {
      "op": "DUP5"
    },
    "1111": {
      "op": "AND"
    },
    "1112": {
      "op": "DUP1"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1115": {
      "op": "SUB"
    },
    "1116": {
      "op": "DUP3"
    },
    "1117": {
      "op": "GT"
    },
    "1118": {
      "op": "ISZERO"
    },
    "1119": {
      "op": "PUSH2",
      "value": "0x46A"
    },
    "1122": {
      "op": "JUMPI"
    },
    "1123": {
      "op": "PUSH2",
      "value": "0x46A"
    },
    "1126": {
      "op": "PUSH2",
      "value": "0x4A9"
    },
    "1129": {
      "jump": "i",
      "op": "JUMP"
    },
    "1130": {
      "op": "JUMPDEST"
    },
    "1131": {
      "op": "ADD"
    },
    "1132": {
      "op": "SWAP4"
    },
    "1133": {
      "op": "SWAP3"
    },
    "1134": {
      "op": "POP"
    },
    "1135": {
      "op": "POP"
    },
    "1136": {
      "op": "POP"
    },
    "1137": {
      "jump": "o",
      "op": "JUMP"
    },
    "1138": {
      "op": "JUMPDEST"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1141": {
      "op": "DUP3"
    },
    "1142": {
      "op": "DUP3"
    },
    "1143": {
      "op": "LT"
    },
    "1144": {
      "op": "ISZERO"
    },
    "1145": {
      "op": "PUSH2",
      "value": "0x484"
    },
    "1148": {
      "op": "JUMPI"
    },
    "1149": {
      "op": "PUSH2",
      "value": "0x484"
    },
    "1152": {
      "op": "PUSH2",
      "value": "0x4A9"
    },
    "1155": {
      "jump": "i",
      "op": "JUMP"
    },
    "1156": {
      "op": "JUMPDEST"
    },
    "1157": {
      "op": "POP"
    },
    "1158": {
      "op": "SUB"
    },
    "1159": {
      "op": "SWAP1"
    },
    "1160": {
      "jump": "o",
      "op": "JUMP"
    },
    "1161": {
      "op": "JUMPDEST"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1164": {
      "op": "DUP3"
    },
    "1165": {
      "op": "PUSH2",
      "value": "0x4A4"
    },
    "1168": {
      "op": "JUMPI"
    },
    "1169": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1174": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1176": {
      "op": "SHL"
    },
    "1177": {
      "op": "DUP2"
    },
    "1178": {
      "op": "MSTORE"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1183": {
      "op": "MSTORE"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1186": {
      "op": "DUP2"
    },
    "1187": {
      "op": "REVERT"
    },
    "1188": {
      "op": "JUMPDEST"
    },
    "1189": {
      "op": "POP"
    },
    "1190": {
      "op": "MOD"
    },
    "1191": {
      "op": "SWAP1"
    },
    "1192": {
      "jump": "o",
      "op": "JUMP"
    },
    "1193": {
      "op": "JUMPDEST"
    },
    "1194": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1201": {
      "op": "SHL"
    },
    "1202": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1204": {
      "op": "MSTORE"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1209": {
      "op": "MSTORE"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1214": {
      "op": "REVERT"
    }
  },
  "sha1": "b2924f6db9c9cd568fa3efd0103a20eb4d2c7122",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract Dicegame {\n    struct Createbet {\n        uint8 presentbet; //it is used to set a new bet\n        bool isbetset; //ultimate value of this is false\n        uint8 finl; //finl is actually final, but since in solidity final is a reserved keyword so i used finl.\n    }\n\n    mapping(address => Createbet) private bets;\n\n    uint8 private randomfactor;\n\n    //Creating two new events:\n    event newbetisset(address bidder, uint8 presentbet);\n\n    event gameresult(address bidder, uint8 presentbet, uint8 finl);\n\n    constructor() {\n        randomfactor = 10;\n    }\n\n    function isbetset() public view returns (bool) {\n        return bets[msg.sender].isbetset;\n    }\n\n    //getting a new bet\n    function getNewbet() public returns (uint8) {\n        require(bets[msg.sender].isbetset == false);\n        bets[msg.sender].isbetset = true;\n        bets[msg.sender].presentbet = random();\n        randomfactor += bets[msg.sender].presentbet;\n        emit newbetisset(msg.sender, bets[msg.sender].presentbet);\n        return bets[msg.sender].presentbet;\n    }\n\n    //roll a dice\n    function roll()\n        public\n        returns (\n            address,\n            uint8,\n            uint8\n        )\n    {\n        require(bets[msg.sender].isbetset == true);\n        bets[msg.sender].finl = random();\n        randomfactor += bets[msg.sender].finl;\n        bets[msg.sender].isbetset = false;\n        if (bets[msg.sender].finl == bets[msg.sender].presentbet) {\n            payable(msg.sender).transfer(100000000000000);\n            emit gameresult(\n                msg.sender,\n                bets[msg.sender].presentbet,\n                bets[msg.sender].finl\n            );\n        } else {\n            emit gameresult(\n                msg.sender,\n                bets[msg.sender].presentbet,\n                bets[msg.sender].finl\n            );\n        }\n\n        return (msg.sender, bets[msg.sender].presentbet, bets[msg.sender].finl);\n    }\n\n    function random() private view returns (uint8) {\n        uint256 blockValue = uint256(\n            blockhash(block.number - 1 + block.timestamp)\n        );\n        blockValue = blockValue + uint256(randomfactor);\n        return uint8(blockValue % 5) + 1;\n    }\n\n    //function is executed if a contract is called and no other function matches the specified function identifier, or if no data is supplied.\n    fallback() external payable {}\n\n    //receiving ether function\n    receive() external payable {}\n}\n",
  "sourceMap": "56:2452:0:-:0;;;575:48;;;;;;;;;-1:-1:-1;599:12:0;:17;;-1:-1:-1;;599:17:0;614:2;599:17;;;56:2452;;;;;;",
  "sourcePath": "contracts/Dicegame.sol",
  "type": "contract"
}